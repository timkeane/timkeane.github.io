/*

nyc-ol-redline-lib-v0.4.8

*/
var nyc=nyc||{};nyc.ol=nyc.ol||{};
nyc.ol.Draw=function(options){this.map=options.map;this.view=this.map.getView();this.source=options.source||new ol.source.Vector;this.viewport=$(this.map.getViewport());this.removed=[];this.geoJson=new ol.format.GeoJSON;this.storage=new nyc.ol.storage.Local;this.storeKey=document.location.href.replace(document.location.search,"")+"nyc.ol.Draw.features";this.dia=new nyc.Dialog;if(options.restore===undefined||options.restore)this.restore();this.layer=new ol.layer.Vector({source:this.source,style:options.style||
this.defaultStyle,zIndex:100});this.map.addLayer(this.layer);if(options.showAccuracy===undefined||options.showAccuracy===true){this.accuaracyLayer=new ol.layer.Vector({source:this.source,style:options.accuracyStyle||this.accuracyStyle});this.map.addLayer(this.accuaracyLayer)}this.showEveryTrackPositon===undefined?true:options.showEveryTrackPositon;this.createModify();this.buttonMenu();this.mover=new nyc.ol.Drag(this.layer);this.mover.on("moveend",this.modified,this);this.mover.setActive(false);this.map.addInteraction(this.mover);
this.viewport.on("contextmenu",$.proxy(this.contextMenu,this));$(document).keyup($.proxy(this.keyUp,this));this.tracker=new nyc.ol.Tracker({map:this.map});this.tracker.on(nyc.ol.Tracker.EventType.UPDATED,this.updateTrack,this)};
nyc.ol.Draw.prototype={tracker:null,drawer:null,modify:null,tracker:null,features:null,mover:null,map:null,view:null,gpsTrack:null,removed:null,type:null,source:null,layer:null,viewport:null,mnuBtn:null,saveBtn:null,btnMnu:null,ctxMnu:null,dia:null,geoJson:null,gpsDeltaMean:500,accuracyLimit:0,storage:null,storeKey:true,firstRun:true,showEveryTrackPositon:true,setGpsAccuracyLimit:function(limit){this.accuracyLimit=limit;this.tracker.accuracyLimit=limit},active:function(){if(this.drawer&&this.drawer.getActive())return true;
return this.tracker.getTracking()},activate:function(type){var me=this;me.deactivate(true);me.type=type;if(type!=nyc.ol.Draw.Type.NONE){var geometryFunction,maxPoints;me.source.on("addfeature",me.triggerFeatureEvent,me);me.source.on("changefeature",me.changed,me);if(type==nyc.ol.Draw.Type.GPS||type==nyc.ol.Draw.Type.FREE)type=nyc.ol.Draw.Type.LINE;else if(type==nyc.ol.Draw.Type.SQUARE){type=nyc.ol.Draw.Type.CIRCLE;geometryFunction=ol.interaction.Draw.createRegularPolygon(4)}else if(type==nyc.ol.Draw.Type.BOX){type=
nyc.ol.Draw.Type.LINE;maxPoints=2;geometryFunction=me.boxGeometry}if(me.type==nyc.ol.Draw.Type.GPS)me.beginGpsCapture();else{var options={source:me.source,type:type,geometryFunction:geometryFunction,maxPoints:maxPoints,freehandCondition:$.proxy(me.freehandCondition,me),condition:$.proxy(me.drawCondition,me)};me.drawer=new ol.interaction.Draw(options);me.drawer.setProperties(options);me.map.addInteraction(me.drawer);me.map.addInteraction(me.modify)}}this.trigger(nyc.ol.Draw.EventType.ACTIVE_CHANGED,
true)},getFeatures:function(){var features={added:[],changed:[],unchanged:[],removed:this.removed};$.each(this.source.getFeatures(),function(){if(this._added)features.added.push(this);else if(this._changed)features.changed.push(this);else features.unchanged.push(this)});return features},addFeatures:function(features,silent){if(silent){this.source.un("addfeature",this.triggerFeatureEvent,this);this.source.un("changefeature",this.changed,this)}this.source.addFeatures(features);if(silent){this.source.on("addfeature",
this.triggerFeatureEvent,this);this.source.on("changefeature",this.changed,this)}},setFeatures:function(features){this.source.clear();this.removed=[];this.addFeatures(features)},removeFeature:function(feature){this.source.removeFeature(feature);this.removed.push(feature);this.store();this.trigger(nyc.ol.FeatureEventType.REMOVE,feature)},clear:function(){this.source.clear();delete this.gpsTrack;this.removed=[];this.store()},deactivate:function(silent){this.type=null;this.mnuBtn.removeClass("point linestring polygon circle square box free gps");
this.map.removeInteraction(this.modify);this.source.un("addfeature",this.triggerFeatureEvent,this);this.source.un("changefeature",this.changed,this);if(this.drawer){this.map.removeInteraction(this.drawer);delete this.drawer}if(this.tracker.getTracking()){this.closePolygon(nyc.ol.FeatureEventType.CHANGE,this.getGpsTrack());this.tracker.setTracking(false)}this.mover.setActive(false);if(!silent)this.trigger(nyc.ol.Draw.EventType.ACTIVE_CHANGED,false)},createModify:function(){var options={source:this.source,
condition:$.proxy(this.modifyCondition,this),deleteCondition:$.proxy(this.deleteCondition,this)};this.modify=new ol.interaction.Modify(options);this.modify.on("modifyend",this.modified,this);this.modify.setProperties(options)},changed:function(event){if(!this.modify._feature)this.triggerFeatureEvent(event)},modified:function(event){var feature=event.feature||this.modify._feature;if(feature){this.triggerFeatureEvent({type:nyc.ol.FeatureEventType.CHANGE,feature:feature});this.modify._feature=null}},
keyUp:function(event){if(event.keyCode==27)this.escape()},boxGeometry:function(coordinates,geometry){if(!geometry)geometry=new ol.geom.Polygon(null);var start=coordinates[0];var end=coordinates[1];if(end)geometry.setCoordinates([[start,[start[0],end[1]],end,[end[0],start[1]],start]]);return geometry},modifyCondition:function(event){var me=this,map=me.map;me.modify._feature=map.forEachFeatureAtPixel(event.pixel,function(feature,layer){if(layer===me.layer)return feature});return ol.events.condition.primaryAction(event)},
deleteCondition:function(event){if(ol.events.condition.singleClick(event)&&ol.events.condition.noModifierKeys(event)){this.escape();return true}},drawCondition:function(mapEvt){var evt=mapEvt.originalEvent;return evt.button!=2&&!evt.shiftKey&&!$(evt.target).hasClass("draw-mnu-btn")&&!this.mover.getActive()},freehandCondition:function(mapEvt){return this.type==nyc.ol.Draw.Type.FREE&&this.drawCondition(mapEvt)},accuracyStyle:function(feature,resolution){var accuracy=feature.get("accuracy")||0;var pixelAccuracy=
accuracy/resolution;return new ol.style.Style({image:new ol.style.Circle({radius:pixelAccuracy,fill:new ol.style.Fill({color:"rgba(255,255,0,.03)"}),stroke:new ol.style.Stroke({color:"rgba(255,255,0,1)",width:.25})}),zIndex:100})},defaultStyle:function(feature,resolution){var accuracy=feature.get("accuracy")||0;var radius=accuracy?3:7;return[new ol.style.Style({fill:new ol.style.Fill({color:"rgba(255,255,255,.2)"}),zIndex:0}),new ol.style.Style({stroke:new ol.style.Stroke({color:"red",width:3}),zIndex:200}),
new ol.style.Style({image:new ol.style.Circle({radius:radius,fill:new ol.style.Fill({color:"red"})}),zIndex:300})]},getGpsTrack:function(){if(!this.gpsTrack||$.inArray(this.gpsTrack,this.source.getFeatures())==-1){this.gpsTrack=new ol.Feature({geometry:new ol.geom.LineString([],"XYZM")});this.source.addFeature(this.gpsTrack)}return this.gpsTrack},beginGpsCapture:function(){this.tracker.accuracyLimit=this.accuracyLimit;this.tracker.setTracking(true)},updateTrack:function(){var tracker=this.tracker,
position=tracker.positions[tracker.positions.length-1],gpsTrack=this.getGpsTrack();gpsTrack.setGeometry(tracker.track);if(this.showEveryTrackPositon)this.source.addFeature(position)},escape:function(){var drawer=this.drawer;if(drawer&&drawer.getActive()){drawer.setActive(false);drawer.setActive(true)}},closeMenus:function(){$(".draw-ctx-mnu, .draw-btn-mnu").slideUp(function(){$(".draw-ctx-mnu").remove()})},buttonMenu:function(){var me=this,viewport=me.viewport;viewport.find(".ol-overlaycontainer-stopevent").append(nyc.ol.Draw.BUTTON_MENU_HTML).trigger("create");
me.btnMnu=viewport.find(".draw-btn-mnu").controlgroup({});me.mnuBtn=viewport.find(".draw-btn");me.mnuBtn.click(function(){me.btnMnu.slideToggle().controlgroup("refresh")});$(this.map.getTarget()).click($.proxy(me.btnMnu.slideUp,me.btnMnu));if(this.storage.canDownload()){me.saveBtn=viewport.find(".draw-mnu-btn.save");me.saveBtn.click($.proxy(me.save,me))}else me.saveBtn=$();viewport.find(".draw-mnu-btn").not(".save").click($.proxy(me.choose,me))},save:function(){this.storage.saveGeoJson("drawing.json",
this.getGeoJson())},choose:function(event){var btn=$(event.target);var type=btn.data("draw-type");this.mnuBtn.removeClass("point linestring polygon circle square box free gps");this.mnuBtn.addClass(type.toLowerCase().replace(/none/,""));if(btn.hasClass("delete"))this.clear();else if(btn.hasClass("cancel"))this.deactivate();else this.activate(type);this.closeMenus()},contextMenu:function(event){var me=this;if(me.active()){var map=me.map,feature;feature=map.forEachFeatureAtPixel(map.getEventPixel(event),
function(feature,layer){if(layer===me.layer)return feature});if(feature)me.showContextMenu(event,feature)}return false},showContextMenu:function(event,feature){var me=this,left=event.offsetX,ctxMnu=$(".draw-ctx-mnu");if(!ctxMnu.length)ctxMnu=$(nyc.ol.Draw.CONTEXT_MENU_HTML).trigger("create");ctxMnu.addClass(me.type.toLowerCase());me.viewport.one("click",function(e){me.escape();me.closeMenus()});me.viewport.find(".ol-overlaycontainer-stopevent").append(ctxMnu);if(left+125>me.viewport.width())left=
left-125;ctxMnu.css({left:left+"px",top:event.offsetY+"px"});ctxMnu.slideDown().controlgroup({});ctxMnu.find(".delete").one("click",function(){me.removeFeature(feature);me.closeMenus()});ctxMnu.find(".move").one("click",function(){me.mover.setActive(true);me.closeMenus()})},triggerFeatureEvent:function(event){var feature=event.feature;if(event.type==nyc.ol.FeatureEventType.ADD)feature._added=true;else if(event.type==nyc.ol.FeatureEventType.CHANGE)feature._changed=true;if(this.type==nyc.ol.Draw.Type.FREE&&
event.type==nyc.ol.FeatureEventType.ADD)this.closePolygon(event.type,feature);else this.triggerEvent(event.type,feature)},closePolygon:function(eventType,feature){var me=this;if(feature.getGeometry().getCoordinates().length>=3){me.source.un("addfeature",me.triggerFeatureEvent,me);me.source.un("changefeature",me.changed,me);me.dia.yesNo({message:"Create ploygon?",callback:function(yesNo){me.triggerEvent(eventType,feature,yesNo);me.source.on("addfeature",me.triggerFeatureEvent,me);me.source.on("changefeature",
me.changed,me)}})}},geomToPolygon:function(feature,polygon){var geom=feature.getGeometry();if(geom.getType()=="Circle")feature.setGeometry(ol.geom.Polygon.fromCircle(geom));else if(polygon){geom.appendCoordinate(geom.getFirstCoordinate());feature.setGeometry(new ol.geom.Polygon([geom.getCoordinates()]))}this.store();return feature},triggerEvent:function(type,feature,polygon){this.saveBtn.show();this.btnMnu.controlgroup("refresh");this.trigger(type,this.geomToPolygon(feature,polygon))},getGeoJson:function(){return this.geoJson.writeFeatures(this.source.getFeatures(),
{featureProjection:this.view.getProjection()})},store:function(){if(this.source.getFeatures().length){this.storage.setItem(this.storeKey,this.getGeoJson());this.saveBtn.show();this.btnMnu.controlgroup("refresh")}else{this.storage.removeItem(this.storeKey);this.saveBtn.hide();this.btnMnu.controlgroup("refresh")}},restore:function(){var me=this,features=me.storage.getItem(me.storeKey);if(features)features=me.geoJson.readFeatures(features,{dataProjection:"EPSG:4326",featureProjection:this.view.getProjection()});
if(features&&features.length)this.dia.yesNo({message:"Restore previous drawing data?",callback:function(yesNo){if(yesNo){me.source.addFeatures(features);me.saveBtn.show();me.btnMnu.controlgroup("refresh")}}})}};nyc.inherits(nyc.ol.Draw,nyc.EventHandling);nyc.ol.Draw.Options;nyc.ol.Draw.Type={POINT:"Point",LINE:"LineString",POLYGON:"Polygon",CIRCLE:"Circle",SQUARE:"Square",BOX:"Box",FREE:"Free",GPS:"GPS",NONE:"None"};nyc.ol.Draw.EventType={ACTIVE_CHANGED:"activechanged"};
nyc.ol.Draw.CONTEXT_MENU_HTML='\x3cdiv class\x3d"ol-unselectable ctl draw-ctx-mnu" data-role\x3d"controlgroup"\x3e'+'\x3cbutton class\x3d"draw-mnu-btn delete" data-role\x3d"button"\x3eDelete feature\x3c/button\x3e'+'\x3cbutton class\x3d"draw-mnu-btn move" data-role\x3d"button"\x3eMove feature\x3c/button\x3e'+"\x3c/div\x3e";
nyc.ol.Draw.BUTTON_MENU_HTML='\x3ca class\x3d"draw-btn ctl ctl-btn" data-role\x3d"button" data-icon\x3d"none" data-iconpos\x3d"notext"\x3eDraw\x3c/a\x3e\x3c/div\x3e'+'\x3cdiv class\x3d"ol-unselectable ctl draw-btn-mnu" data-role\x3d"controlgroup"\x3e'+'\x3cbutton class\x3d"draw-mnu-btn save" data-draw-type\x3d"None" data-role\x3d"button" title\x3d"Save the current drawing"\x3eSave...\x3c/button\x3e'+'\x3cbutton class\x3d"draw-mnu-btn point" data-draw-type\x3d"Point" data-role\x3d"button" title\x3d"Click to draw a point"\x3ePoint\x3c/button\x3e'+
'\x3cbutton class\x3d"draw-mnu-btn linestring" data-draw-type\x3d"LineString" data-role\x3d"button" title\x3d"Click to draw each point of a line"\x3eLine\x3c/button\x3e'+'\x3cbutton class\x3d"draw-mnu-btn polygon" data-draw-type\x3d"Polygon" data-role\x3d"button" title\x3d"Click to draw each point of a polygon"\x3ePolygon\x3c/button\x3e'+'\x3cbutton class\x3d"draw-mnu-btn circle" data-draw-type\x3d"Circle" data-role\x3d"button" title\x3d"Click then drag to draw a circle"\x3eCircle\x3c/button\x3e'+
'\x3cbutton class\x3d"draw-mnu-btn square" data-draw-type\x3d"Square" data-role\x3d"button" title\x3d"Click then drag to draw a square"\x3eSquare\x3c/button\x3e'+'\x3cbutton class\x3d"draw-mnu-btn box" data-draw-type\x3d"Box" data-role\x3d"button" title\x3d"Click then drag to draw a box"\x3eBox\x3c/button\x3e'+'\x3cbutton class\x3d"draw-mnu-btn free" data-draw-type\x3d"Free" data-role\x3d"button" title\x3d"Click and drag to draw a freehand line"\x3eFreehand\x3c/button\x3e'+'\x3cbutton class\x3d"draw-mnu-btn gps" data-draw-type\x3d"GPS" data-role\x3d"button" title\x3d"Capture coordiantes from device geoloaction"\x3eGPS Capture\x3c/button\x3e'+
'\x3cbutton class\x3d"draw-mnu-btn delete" data-draw-type\x3d"None" data-role\x3d"button" title\x3d"Delete all drawn features"\x3eClear All\x3c/button\x3e'+'\x3cbutton class\x3d"draw-mnu-btn cancel" data-draw-type\x3d"None" data-role\x3d"button" title\x3d"Deactivate drawing"\x3eDeactivate\x3c/button\x3e'+"\x3c/div\x3e";
nyc.ol.Drag=function(layer){this.layer=layer;ol.interaction.Pointer.call(this,{handleDownEvent:nyc.ol.Drag.prototype.handleDownEvent,handleDragEvent:nyc.ol.Drag.prototype.handleDragEvent,handleMoveEvent:nyc.ol.Drag.prototype.handleMoveEvent,handleUpEvent:nyc.ol.Drag.prototype.handleUpEvent});this.coords=null;this.feature=null};ol.inherits(nyc.ol.Drag,ol.interaction.Pointer);
nyc.ol.Drag.prototype.handleDownEvent=function(event){var me=this,map=event.map;var feature=map.forEachFeatureAtPixel(event.pixel,function(feature,layer){if(layer===me.layer)return feature});if(feature){this.coords=event.coordinate;this.feature=feature}return!!feature};
nyc.ol.Drag.prototype.handleDragEvent=function(event){var deltaX=event.coordinate[0]-this.coords[0];var deltaY=event.coordinate[1]-this.coords[1];var geometry=this.feature.getGeometry();geometry.translate(deltaX,deltaY);this.coords[0]=event.coordinate[0];this.coords[1]=event.coordinate[1]};
nyc.ol.Drag.prototype.handleMoveEvent=function(event){var me=this,map=event.map;var feature=map.forEachFeatureAtPixel(event.pixel,function(feature,layer){if(layer===me.layer)return feature});if(feature)$(map.getViewport()).css("cursor","move")};nyc.ol.Drag.prototype.handleUpEvent=function(event){if(this.feature)this.dispatchEvent({type:"moveend",feature:this.feature});this.coords=null;this.feature=null;$(event.map.getViewport()).css("cursor","inherit");this.setActive(false);return false};var nyc=nyc||{};nyc.ol=nyc.ol||{};nyc.ol.geoserver=nyc.ol.geoserver||{};
nyc.ol.geoserver.GetFeature=function(options){this.map=options.map;this.viewProj=this.map.getView().getProjection().getCode();this.dataProj=options.projection||"EPSG:3857";$(this.map.getViewport()).append(nyc.ol.geoserver.GetFeature.HTML).trigger("create");$("#btn-get-feat").click($.proxy(this.toggleActive,this));this.geoJson=new ol.format.GeoJSON;this.buffer=options.buffer||25;this.units=options.units||nyc.ol.geoserver.GetFeature.BufferUnits.FEET;this.geomColumn=options.geomColumn||"SHAPE";options.propertyNames=
options.propertyNames||[];options.propertyNames.push(this.geomColumn);this.source=new ol.source.Vector({projection:this.projection});this.layer=new ol.layer.Vector({source:this.source,style:options.style||this.defaultStyle});this.map.addLayer(this.layer);this.url=options.wfsUrl;this.url+="?service\x3dwfs";this.url+="\x26version\x3d2.0.0";this.url+="\x26request\x3dGetFeature";this.url+="\x26typeNames\x3d"+options.namespace+":"+options.typeName;this.url+="\x26propertyName\x3d"+options.propertyNames.toString();
this.url+="\x26count\x3d1";this.url+="\x26outputFormat\x3dtext/javascript";this.url+="\x26format_options\x3dcallback:"+this.instance()+".callback";this.url+="\x26cql_filter\x3d"};
nyc.ol.geoserver.GetFeature.prototype={map:null,btn:null,viewProj:null,dataProj:null,url:null,buffer:null,source:null,layer:null,geoJson:null,wkt:null,active:false,filter:"DWITHIN(${geomColumn},POINT(${x} ${y}),${buffer},${units})",defaultStyle:new ol.style.Style({stroke:new ol.style.Stroke({color:"rgba(255,0,0,0.5)",width:5})}),getFeatures:function(){var me=this,features=[];$.each(me.source.getFeatures(),function(_,feature){features.push({feature:feature,wkt:me.wkt.writeFeature(feature)})});return features},
clear:function(){this.source.clear()},toggleActive:function(){this[this.active?"deactivate":"activate"]()},activate:function(){this.active=true;$("#btn-get-feat").addClass("active");this.map.on("click",this.getFeature,this)},deactivate:function(){this.active=false;$("#btn-get-feat").removeClass("active");this.map.un("click",this.getFeature,this)},callback:function(response){if(response&&response.features&&response.features.length){var feature=this.geoJson.readFeature(response.features[0]);feature.setGeometry(feature.getGeometry().transform(this.dataProj,
this.viewProj));this.trigger(nyc.ol.FeatureEventType.ADD,feature);this.source.addFeature(feature)}},getFeature:function(event){if(event.originalEvent.target===$("#btn-get-feat").get(0))return;else if(event.originalEvent.shiftKey)this.removeFeature(event);else{var coord=proj4(this.viewProj,this.dataProj,event.coordinate),filter=this.filter;filter=filter.replace(/\$\{geomColumn\}/,this.geomColumn);filter=filter.replace(/\$\{x\}/,coord[0]);filter=filter.replace(/\$\{y\}/,coord[1]);filter=filter.replace(/\$\{buffer\}/,
this.buffer);filter=filter.replace(/\$\{units\}/,this.units);$.ajax({url:this.url+filter,dataType:"jsonp"})}},instance:function(){var instance;for(var i=0;i>-1;i++){instance="instance_"+i;if(!nyc.ol.geoserver.GetFeature[instance]){nyc.ol.geoserver.GetFeature[instance]=this;return"nyc.ol.geoserver.GetFeature."+instance}}},removeFeature:function(event){var me=this,map=me.map,feature=map.forEachFeatureAtPixel(event.pixel,function(feature,layer){if(layer==me.layer)return feature});if(feature){this.trigger(nyc.ol.FeatureEventType.REMOVE,
feature);me.source.removeFeature(feature)}}};nyc.inherits(nyc.ol.geoserver.GetFeature,nyc.EventHandling);nyc.ol.geoserver.GetFeature.HTML='\x3ca id\x3d"btn-get-feat" class\x3d"ctl ctl-btn" data-role\x3d"button" data-icon\x3d"arrow-d" data-iconpos\x3d"notext" data-zoom-incr\x3d"1" title\x3d"Get feature (Click the map to retrieve a feature. Hold the shift-key and click a feature to remove.)"\x3e'+'\x3cspan class\x3d"noshow"\x3eGet feature\x3c/span\x3e'+"\x3c/a\x3e";nyc.ol.geoserver.GetFeature.Options;
nyc.ol.geoserver.GetFeature.BufferUnits={FEET:"feet",METERS:"meters",MILES:"statute miles",NAUTICAL_MILES:"nautical miles",KILOMETERS:"kilometers"};var nyc=nyc||{};nyc.ol=nyc.ol||{};nyc.ol.geoserver=nyc.ol.geoserver||{};nyc.ol.geoserver.FeatureTxn=function(options){this.url=options.wfsUrl;this.geomColumn=options.geomColumn;this.success=options.success;this.error=options.error;this.format=new ol.format.WFS;this.serializer=new XMLSerializer;this.options={gmlOptions:{srsName:options.projection},featureNS:options.namespace,featureType:options.typeName}};
nyc.ol.geoserver.FeatureTxn.prototype={url:null,geomColumn:null,success:null,error:null,format:null,serializer:null,options:null,add:function(feature){var me=this,clone=me.clone(feature),node=me.format.writeTransaction([clone],null,null,me.options);$.ajax({type:"POST",url:this.url,data:this.serializer.serializeToString(node),contentType:"text/xml",success:function(data){me.success(arguments)},error:function(data){me.error(arguments)}})},remove:function(feature){var me=this,clone=me.clone(feature),
node=me.format.writeTransaction(null,null,[clone],me.options);$.ajax({type:"POST",url:this.url,data:this.serializer.serializeToString(node),contentType:"text/xml",success:function(data){me.success(arguments)},error:function(data){me.error(arguments)}})},update:function(feature){var me=this,clone=me.clone(feature),node=me.format.writeTransaction(null,[clone],null,me.options);$.ajax({type:"POST",url:this.url,data:this.serializer.serializeToString(node),contentType:"text/xml",success:function(data){me.success(arguments)},
error:function(data){me.error(arguments)}})},clone:function(feature){var clone=new ol.Feature,props=feature.getProperties();clone.setId(feature.getId());delete props.geometry;props[this.geomColumn]=feature.getGeometry();clone.setProperties(props);return clone}};nyc.ol.geoserver.FeatureTxn.Options;
//# sourceMappingURL=nyc-ol-redline-lib.sourcemap.json